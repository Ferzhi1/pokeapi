// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Api3.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250422200036_update2")]
    partial class update2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("api3.Models.MazoPokemon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ImagenUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("MazoPokemon");
                });

            modelBuilder.Entity("api3.Models.PedidoPokemon", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("FechaPedido")
                        .HasColumnType("datetime2");

                    b.Property<string>("NombreMazo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PedidosUsuariosPokeId")
                        .HasColumnType("int");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UsuarioEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("PedidosUsuariosPokeId");

                    b.ToTable("PedidoPokemon");
                });

            modelBuilder.Entity("api3.Models.PedidosUsuariosPoke", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MazoSeleccionado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PedidoUsuario");
                });

            modelBuilder.Entity("api3.Models.ProductoPokemon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EnVenta")
                        .HasColumnType("bit");

                    b.Property<string>("ImagenUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MazoPokemonId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PedidoPokemonid")
                        .HasColumnType("int");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Rareza")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MazoPokemonId");

                    b.HasIndex("PedidoPokemonid");

                    b.ToTable("ProductoPokemon");
                });

            modelBuilder.Entity("api3.Models.StatPokemon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProductoPokemonId")
                        .HasColumnType("int");

                    b.Property<int>("Valor")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductoPokemonId");

                    b.ToTable("StatPokemon");
                });

            modelBuilder.Entity("api3.Models.PedidoPokemon", b =>
                {
                    b.HasOne("api3.Models.PedidosUsuariosPoke", null)
                        .WithMany("Pokemons")
                        .HasForeignKey("PedidosUsuariosPokeId");
                });

            modelBuilder.Entity("api3.Models.ProductoPokemon", b =>
                {
                    b.HasOne("api3.Models.MazoPokemon", null)
                        .WithMany("Pokemons")
                        .HasForeignKey("MazoPokemonId");

                    b.HasOne("api3.Models.PedidoPokemon", null)
                        .WithMany("Pokemons")
                        .HasForeignKey("PedidoPokemonid");
                });

            modelBuilder.Entity("api3.Models.StatPokemon", b =>
                {
                    b.HasOne("api3.Models.ProductoPokemon", null)
                        .WithMany("Stats")
                        .HasForeignKey("ProductoPokemonId");
                });

            modelBuilder.Entity("api3.Models.MazoPokemon", b =>
                {
                    b.Navigation("Pokemons");
                });

            modelBuilder.Entity("api3.Models.PedidoPokemon", b =>
                {
                    b.Navigation("Pokemons");
                });

            modelBuilder.Entity("api3.Models.PedidosUsuariosPoke", b =>
                {
                    b.Navigation("Pokemons");
                });

            modelBuilder.Entity("api3.Models.ProductoPokemon", b =>
                {
                    b.Navigation("Stats");
                });
#pragma warning restore 612, 618
        }
    }
}
