// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Api3.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250604135826_update 17")]
    partial class update17
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Api3.Models.ColeccionPokemon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("EmailUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagenUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rareza")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ColeccionPokemon");
                });

            modelBuilder.Entity("api3.Models.MazoPokemon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ImagenUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("MazoPokemon");
                });

            modelBuilder.Entity("api3.Models.PedidoPokemon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("FechaPedido")
                        .HasColumnType("datetime2");

                    b.Property<string>("NombreMazo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PedidosUsuariosPokeId")
                        .HasColumnType("int");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UsuarioEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PedidosUsuariosPokeId");

                    b.ToTable("PedidoPokemon");
                });

            modelBuilder.Entity("api3.Models.PedidoUsuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MazoSeleccionado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PedidoUsuario");
                });

            modelBuilder.Entity("api3.Models.ProductoPokemon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EnVenta")
                        .HasColumnType("bit");

                    b.Property<string>("ImagenUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MazoPokemonId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PedidoPokemonId")
                        .HasColumnType("int");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PrecioInicial")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PujaActual")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Rareza")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TiempoExpiracion")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MazoPokemonId");

                    b.HasIndex("PedidoPokemonId");

                    b.ToTable("ProductoPokemon");
                });

            modelBuilder.Entity("api3.Models.Puja", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("CantidadMonedas")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("FechaPuja")
                        .HasColumnType("datetime2");

                    b.Property<int>("PokemonId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductoPokemonId")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductoPokemonId");

                    b.ToTable("Puja");
                });

            modelBuilder.Entity("api3.Models.SolicitudAmistad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaEnvio")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReceptorEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemitenteEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SolicitudAmistad");
                });

            modelBuilder.Entity("api3.Models.StatPokemon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ColeccionPokemonId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProductoPokemonId")
                        .HasColumnType("int");

                    b.Property<int>("Valor")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ColeccionPokemonId");

                    b.HasIndex("ProductoPokemonId");

                    b.ToTable("StatPokemon");
                });

            modelBuilder.Entity("api3.Models.UsuariosPokemonApi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("CorreoValidado")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Monedero")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreguntaSeguridad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResetPasswordToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ResetPasswordTokenExpiry")
                        .HasColumnType("datetime2");

                    b.Property<string>("RespuestaSeguridad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UsuariosPokemonApi");
                });

            modelBuilder.Entity("api3.Models.PedidoPokemon", b =>
                {
                    b.HasOne("api3.Models.PedidoUsuario", "PedidoUsuario")
                        .WithMany("Pokemons")
                        .HasForeignKey("PedidosUsuariosPokeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PedidoUsuario");
                });

            modelBuilder.Entity("api3.Models.ProductoPokemon", b =>
                {
                    b.HasOne("api3.Models.MazoPokemon", null)
                        .WithMany("Pokemons")
                        .HasForeignKey("MazoPokemonId");

                    b.HasOne("api3.Models.PedidoPokemon", null)
                        .WithMany("Pokemons")
                        .HasForeignKey("PedidoPokemonId");
                });

            modelBuilder.Entity("api3.Models.Puja", b =>
                {
                    b.HasOne("api3.Models.ProductoPokemon", null)
                        .WithMany("HistorialPujas")
                        .HasForeignKey("ProductoPokemonId");
                });

            modelBuilder.Entity("api3.Models.StatPokemon", b =>
                {
                    b.HasOne("Api3.Models.ColeccionPokemon", null)
                        .WithMany("Stats")
                        .HasForeignKey("ColeccionPokemonId");

                    b.HasOne("api3.Models.ProductoPokemon", null)
                        .WithMany("Stats")
                        .HasForeignKey("ProductoPokemonId");
                });

            modelBuilder.Entity("Api3.Models.ColeccionPokemon", b =>
                {
                    b.Navigation("Stats");
                });

            modelBuilder.Entity("api3.Models.MazoPokemon", b =>
                {
                    b.Navigation("Pokemons");
                });

            modelBuilder.Entity("api3.Models.PedidoPokemon", b =>
                {
                    b.Navigation("Pokemons");
                });

            modelBuilder.Entity("api3.Models.PedidoUsuario", b =>
                {
                    b.Navigation("Pokemons");
                });

            modelBuilder.Entity("api3.Models.ProductoPokemon", b =>
                {
                    b.Navigation("HistorialPujas");

                    b.Navigation("Stats");
                });
#pragma warning restore 612, 618
        }
    }
}
